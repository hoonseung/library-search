version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: es_container
    user: "1000:1000"  # 사용자 및 그룹을 지정하여 권한 문제를 방지합니다.

    environment:
      - discovery.type=single-node  # 단일 노드로 실행되도록 설정합니다. (클러스터 모드가 필요하지 않을 때 사용)
      - ES_JAVA_OPTS=-Xms512m -Xmx521m  # Elasticsearch의 메모리 설정을 지정합니다 (최소 및 최대 500mB로 설정).
      - xpack.security.enabled=false  # 보안 설정을 비활성화합니다. 기본으로 비활성화되어 있지만 명시적으로 지정.
      - network.host=0.0.0.0  # 외부에서 접근할 수 있도록 모든 IP에 바인딩
      - bootstrap.memory_lock=true  # 메모리 잠금 활성화 (메모리 스왑 방지)
      - http.port=9200  # Elasticsearch의 HTTP 포트 설정 (기본값은 9200)
      - cluster.name=my-cluster  # 클러스터 이름을 설정하여 다른 클러스터와 식별 가능
      - node.name=ls-node-1  # 노드 이름을 지정하여 클러스터에서 구분 가능
      - xpack.monitoring.enabled=true  # Elasticsearch 모니터링 기능 활성화
      - xpack.watcher.enabled=false  # Watcher 기능 비활성화 (필요하지 않을 때 리소스 절약)
      - xpack.ml.enabled=false  # 머신 러닝 기능 비활성화 (리소스 절약)
      - xpack.security.enabled=false # 보안 기능 비활성화
      - xpack.security.transport.ssl.enabled=false # 보안 전송 SSL 비활성화


    ulimits:
      memlock:
        soft: -1  # 메모리 잠금 제한을 무제한으로 설정하여 성능 문제를 방지합니다 (필수는 아님).
        hard: -1


    command: > # 컨테이너가 시작될 때 Elasticsearch 플러그인 설치 및 Elasticsearch 실행을 위한 명령어를 실행합니다. 
      sh -c "
      bin/elasticsearch-plugin install analysis-nori; 
      bin/elasticsearch
      " 

    volumes:
      - es_data:/usr/share/elasticsearch/data  # 데이터를 영구 저장하기 위해 볼륨을 사용하여 데이터 디렉터리를 마운트합니다.

    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10 #Kibana의 버전과 Elasticsearch의 버전이 맞아야 합니다.
    container_name: kibana_container
    depends_on:
      - elasticsearch

    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200 # Kibana가 사용할 Elasticsearch 호스트를 지정합니다.
    ports:
      - "5601:5601"

volumes:
  es_data:  # 데이터 영구 저장을 위한 Docker 볼륨을 정의합니다.
    driver: local # 로컬 볼륨을 사용합니다.